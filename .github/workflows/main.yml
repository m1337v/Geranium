name: Build and Release IPA

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive  # Ensure submodules are checked out recursively

      - name: Install Procursus
        uses: dhinakg/procursus-action@main
        with:
          packages: ldid dpkg findutils sed coreutils make

      - name: Install THEOS
        run: |
          set -x
          export BASEDIR="$(pwd)"
          export THEOS="${BASEDIR}/theos"
          mkdir -p $THEOS
          # Download and prepare the Theos installer script
          curl -fsSL https://raw.githubusercontent.com/theos/theos/master/bin/install-theos >> install-theos.sh
          # Modify the installer script if needed
          gsed -E "/^\s*get_theos\s*$/,+1 s/^(\s*)(get_sdks)\s*$/\1mkdir -p \${THEOS}\/sdks\n\1touch \${THEOS}\/sdks\/sdk\n\1\2/g" -i install-theos.sh
          # Run the modified installer
          bash install-theos.sh
          # Download and install the specific iOS SDK
          curl -L https://github.com/theos/sdks/releases/latest/download/iPhoneOS16.5.sdk.tar.xz --output $THEOS/sdks/iPhoneOS16.5.sdk.tar.xz
          gunzip $THEOS/sdks/iPhoneOS16.5.sdk.tar.xz
          tar -xf $THEOS/sdks/iPhoneOS16.5.sdk.tar -C $THEOS/sdks
          rm $THEOS/sdks/iPhoneOS16.5.sdk.tar
          cd $BASEDIR

      - name: Verify Theos Installation
        run: |
          echo "Checking Theos installation..."
          ls -la $THEOS
          ls -la $THEOS/makefiles
          ls -la $THEOS_MAKE_PATH

      - name: Run Build Script
        run: |
          chmod +x ./ipabuild.sh
          ./ipabuild.sh
        env:
          APPLICATION_NAME: Geranium
          CONFIGURATION: Debug
          THEOS: ${{ env.THEOS }}
          THEOS_MAKE_PATH: ${{ env.THEOS_MAKE_PATH }}

      - name: Rename IPA to Geranium.ipa
        run: |
          mv build/Geranium.tipa build/Geranium.ipa

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Latest Build
          draft: false
          prerelease: false
          generate_release_notes: false
          overwrite: true

      - name: Upload IPA to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/Geranium.ipa
          asset_name: Geranium.ipa
          asset_content_type: application/zip
